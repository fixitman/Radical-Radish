@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@using RadzenUI.auth;
@inject ProtectedSessionStorage Session
@inject AppState AppState
@inject ILogger<App> logger
@inject AuthenticationStateProvider AuthStateProvider


<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" >
                <NotAuthorized>
                    <RedirectToLogin/>
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>


@code {


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await AppState.InitializeAsync(Session);
       
        await base.OnAfterRenderAsync(firstRender);
    }
}